using PacketSerializationGenerators.Objects;

namespace PacketSerializationGenerators.Abstractions.Stringifiers;

/// <summary>
/// Represents an interface for generating binary de/serialization logic for properties.
/// </summary>
public interface IPropertyBinarySerializationStringifier : IPropertyStringifier
{
    /// <summary>
    /// Generates the logic required to deserialize the given <see cref="MyPropertySymbol"/>.
    /// </summary>
    /// <param name="propertySymbol">The property symbol.</param>
    /// <param name="tempVariableNameOverride">
    /// A value that will be used as the name of the temporary variable generated by the deserialization process.
    /// </param>
    /// <returns>The generated logic.</returns>
    string GetDeserializationString(MyPropertySymbol propertySymbol, string? tempVariableNameOverride = null);

    /// <summary>
    /// Generates the logic required to serialize the given <see cref="MyPropertySymbol"/>.
    /// </summary>
    /// <param name="propertySymbol">The property symbol.</param>
    /// <returns>The generated logic.</returns>
    string GetSerializationString(MyPropertySymbol propertySymbol);
}
